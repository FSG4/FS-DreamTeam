{"ast":null,"code":"var _jsxFileName = \"/home/elvis/Documents/all-Projects/rt/FS-DreamTeam/netflix/src/Componets/Rows/Row/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../../../utils/axios';\nimport \"./Row.css\";\nimport movieTrailer from \"movie-trailer\";\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = ({\n  title,\n  fetchUrl,\n  isLargeRow\n}) => {\n  _s();\n  const [movies, setMovie] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const base_url = \"https://image.tmdb.org/t/p/original\";\n  useEffect(() => {\n    (async () => {\n      try {\n        // console.log(fetchUrl);\n        const request = await axios.get(`${fetchUrl}`);\n        console.log(request);\n        setMovie(request.data.results);\n      } catch (error) {\n        console.log(`error, ${error}`);\n      }\n    })();\n  }, [fetchUrl]);\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)).then(url => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search);\n        // console.log(urlParams);\n        // console.log(urlParams.get('v'));\n        setTrailerUrl(urlParams.get('v'));\n      });\n    }\n  };\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoPlay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies === null || movies === void 0 ? void 0 : movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name,\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"40px\"\n      },\n      children: trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: trailerUrl,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Row, \"OBZue/j7I/usqCioZifFEPGxgLs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","movieTrailer","YouTube","jsxDEV","_jsxDEV","Row","title","fetchUrl","isLargeRow","_s","movies","setMovie","trailerUrl","setTrailerUrl","base_url","request","get","console","log","data","results","error","handleClick","movie","name","original_name","then","url","urlParams","URLSearchParams","URL","search","opts","height","width","playerVars","autoPlay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","src","poster_path","backdrop_path","alt","style","padding","videoId","_c","$RefreshReg$"],"sources":["/home/elvis/Documents/all-Projects/rt/FS-DreamTeam/netflix/src/Componets/Rows/Row/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from '../../../utils/axios';\nimport \"./Row.css\"\nimport movieTrailer from \"movie-trailer\";\nimport YouTube from 'react-youtube';\n\nconst Row = ({title, fetchUrl, isLargeRow}) => {\n  const [movies, setMovie] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  const base_url = \"https://image.tmdb.org/t/p/original\";\n\n  useEffect(() => {\n    (async () => {\n      try {\n        // console.log(fetchUrl);\n        const request = await axios.get(`${fetchUrl}`);\n        console.log(request);\n        setMovie(request.data.results);\n\n      } catch (error) {\n        console.log(`error, ${error}`);\n      }\n    }) ()\n  }, [fetchUrl]);\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl('')\n    } else{\n      movieTrailer(movie?.title || movie?.name || movie?.original_name)\n      .then((url) => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search)\n        // console.log(urlParams);\n        // console.log(urlParams.get('v'));\n        setTrailerUrl(urlParams.get('v'))\n      })\n    }\n  };\n\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoPlay: 1\n    },\n  }\n\n\n  return (\n    <div className=\"row\">\n        <h1>{title}</h1>\n        <div className=\"row_posters\">\n          {movies?.map((movie, index) => (\n            <img \n              onClick={() => handleClick(movie)}\n              key={index} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} \n            />\n          ))}\n        </div>\n        <div style={{padding: \"40px\"}}>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    </div>\n  )\n}\n\nexport default Row; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}